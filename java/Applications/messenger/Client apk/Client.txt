package project1;
import java.io.*;
import java.net.*;
import java.awt.*;
import java.awt.event.*;

import javax.swing.*;

public class Client extends JFrame{
	
	private JTextField userText;
	private JTextArea chatWindow;
	private ObjectOutputStream output;
	private ObjectInputStream input;
	private String message = "";
	private String serverIP;
	private Socket connection;
	
	//constructor
	public Client(String host){
		super("Messenger");
		serverIP = host;
		userText = new JTextField();
		ableToType(false);
		userText.addActionListener(
			new ActionListener(){
				public void actionPerformed(ActionEvent event) {
					sendMessage(event.getActionCommand());
					userText.setText("");
				}
			}
		);
		add(userText, BorderLayout.NORTH);
		chatWindow = new JTextArea();
		chatWindow.setEditable(false);
		add(new JScrollPane(chatWindow), BorderLayout.CENTER);
		setSize(600,300);
		setVisible(true);
	}
	
	//connect to server
	public void startRunning(){
		try{
			connectToServer();
			setupStreams();
			whileChatting();
		}catch(EOFException eofException){
			showMessage("\nClient terminated connection");
		}catch(IOException ioException){
			ioException.printStackTrace();
		}finally{
			closeCrap();
		}
	}

	//connect to server
	private void connectToServer() throws IOException{
		showMessage(" Attempting connection..\n");
		connection = new Socket(InetAddress.getByName(serverIP), 6789);
		showMessage(" Connected to: " + connection.getInetAddress().getHostName());
	}
	
	//setup streams to send and receive messages
	private void setupStreams() throws IOException{
		output = new ObjectOutputStream(connection.getOutputStream());
		output.flush();
		input = new ObjectInputStream(connection.getInputStream());
		showMessage("\n Streams are now setup!\n");
	}
	//while chatting with server
	private void whileChatting() throws IOException{
		ableToType(true);
		do{
			try{
				message = (String) input.readObject();
				showMessage("\n"+ message);
				
				
			}catch(ClassNotFoundException clssNotFoundException){
				showMessage("\n I dont know what has been send");
			}
		}while(!message.equals("SERVER - END"));
	}
	
	//close the streams and sockets
	private void closeCrap() {
		showMessage("\n Closing connections...\n");
		ableToType(false);
		try{
			output.close();
			input.close();
			connection.close();
		}catch(IOException ioEception){
			ioEception.printStackTrace();
		}
	}
	
	//send message to the server
	private void sendMessage(String message) {
		try{
			output.writeObject("CLIENT - " + message);
			output.flush();
			showMessage("\nCLIENT - " + message);
		}catch(IOException ioException){
			chatWindow.append("\n ERROR: I cant send that message");
		}
	}
	
	//update chatWindow
	private void showMessage(final String text) {
		SwingUtilities.invokeLater(
			new Runnable(){
				public void run(){
					chatWindow.append(text);
				}
			}
		);
	}
		
	//let the user type stuff into their box
	private void ableToType(boolean tof) {
		SwingUtilities.invokeLater(
			new Runnable(){
					public void run(){
					userText.setEditable(tof);
				}
			}
		);
	}
	
}












